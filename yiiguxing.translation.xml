<application>
  <component name="AppStorage">
    <histories>
      <item value="fire Channel Unregistered" />
      <item value="to shorten the stack depth:" />
      <item value="certain" />
      <item value="On top of this principle" />
      <item value="principle" />
      <item value="traffic" />
      <item value="discarded" />
      <item value="silently" />
      <item value="goes beyond" />
      <item value="beyond" />
      <item value="f an inbound event goes beyond the top inbound handler, it is discarded * silently, or logged if it needs your attention" />
      <item value="peer via" />
      <item value="peer" />
      <item value="bottom-up" />
      <item value="Internal" />
      <item value="diagram" />
      <item value="advanced" />
      <item value="mall enough * not to waste its space" />
      <item value="it is also responsible for handling their * life-cycle and allows shutting them down in a global fashio" />
      <item value="responsible" />
      <item value="* The {@link EventExecutorGroup} is responsible for providing the {@link EventExecutor}'s to use" />
      <item value="which comes * with some handy methods to see" />
      <item value="a generic * way to access methods." />
      <item value="which allows registering {@link Channel}s that get * processed for later selection during the event loop." />
      <item value="which allows registering {@link Channel}s that get * processed for later selection during the event loop. *" />
      <item value="for later selection" />
      <item value="processed" />
      <item value="pecial EventExecutorGroup which allows registering Channels that get   processed for later selection during the event loop" />
      <item value="* Special {@link EventExecutorGroup} which allows registering {@link Channel}s that get * processed for later selection during the event loop" />
      <item value="ater selection during the event loop" />
      <item value="Special" />
      <item value="Indicates a blocking select should follow" />
      <item value="Memory consistency effects: Actions in a thread prior to * submitting a {@code Runnable} object to an {@code Executor} * &lt;a href=&quot;package-summary.html#MemoryVisibility&quot;&gt;&lt;i&gt;happen-before&lt;/i&gt;&lt;/a&gt; * its execution begins, perhaps in another thread." />
      <item value="consistency" />
      <item value="convenient factory methods for these Executors." />
      <item value="Thread Pool Executor" />
      <item value="extensive" />
      <item value="below * serializes the submission of tasks to a second executor, * illustrating a composite executor." />
      <item value="Thread Per Task Executor" />
      <item value="Per" />
      <item value="Per Task" />
      <item value="每一个" />
      <item value="strictly" />
      <item value="provides a way of decoupling task submission" />
      <item value="also will get returned" />
      <item value="notified" />
      <item value="handle" />
      <item value="get * processed for later selection during the event loop." />
      <item value="which allows registering" />
      <item value="which" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="568" />
        <entry key="ENGLISH" value="569" />
        <entry key="DANISH" value="3" />
        <entry key="FRENCH" value="3" />
        <entry key="CATALAN" value="2" />
        <entry key="KANNADA" value="1" />
        <entry key="LATVIAN" value="3" />
        <entry key="ROMANIAN" value="1" />
        <entry key="SWEDISH" value="1" />
        <entry key="SLOVENIAN" value="1" />
        <entry key="SPANISH" value="1" />
        <entry key="GREEK" value="1" />
        <entry key="ITALIAN" value="2" />
      </map>
    </option>
  </component>
</application>