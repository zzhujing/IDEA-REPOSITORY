<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="620" />
    <option name="newTranslationDialogWidth" value="1510" />
    <option name="newTranslationDialogX" value="544" />
    <option name="newTranslationDialogY" value="453" />
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="Hint for that an auto-configuration should be applied after other specified auto-configuration classes.&#10;" />
      <item value="identifying matching beans" />
      <item value="ancestors" />
      <item value="singular" />
      <item value="plural" />
      <item value="EQUAL OR NEWER" />
      <item value="Produ" />
      <item value="The {@link Condition} should be evaluated when adding a regular (non {@code @Configuration}) bean. The condition will not prevent {@code @Configuration} classes from being added. &lt;p&gt;At the time that the condition is evaluated, all {@code @Configuration} classes will have been parsed." />
      <item value="prevent" />
      <item value="Note that this variant does not take attribute overrides into account.&#10;" />
      <item value="As a consequence, additional annotations of the specified annotationType will be ignored.&#10;" />
      <item value="in contrast to&#10;" />
      <item value="in cont" />
      <item value="Î©" />
      <item value="and transparently enforces attribute alias semantics for annotation attributes that are annotated with @AliasFor.&#10;" />
      <item value="transparently enforces attribute alias semantics for annotation attributes that are annotated with @AliasFor&#10;" />
      <item value="All public methods in this class that return annotations, arrays of annotations, or {@link AnnotationAttributes} transparently support attribute aliases configured via {@link AliasFor @AliasFor}. Consult the various {@code synthesizeAnnotation(..)} methods for details." />
      <item value="For fine-grained support for meta-annotations with &lt;em&gt;attribute overrides&lt;em&gt; in &lt;em&gt;composed annotations&lt;em&gt;, consider using {@link AnnotatedElementUtils}'s more specific methods instead." />
      <item value="Consult the javadoc for each method in this class for details." />
      <item value="Terminology" />
      <item value="reorder" />
      <item value="ENCLOSING" />
      <item value="Find all directly declared annotations as well as any @Inherited superclass annotations. This strategy is only really useful when used with Class types since the @Inherited annotation is ignored for all other annotated elements. This strategy does not search implemented interfaces.&#10;" />
      <item value="is identical to" />
      <item value="as well as&#10;" />
      <item value="fat&#10;" />
      <item value="is Exploded" />
      <item value="Exploded" />
      <item value="Reset any cached handlers just in case a jar protocol has already been used. We reset the handler by trying to set a null {@link URLStreamHandlerFactory} which should have no effect other than clearing the handlers cache" />
      <item value="archives" />
      <item value="Utility that can be used to invoke lambdas in a safe way. Primarily designed to help support generically typed callbacks where {@link ClassCastException class cast exceptions} need to be dealt with due to class erasure." />
      <item value="is Candidate Class" />
      <item value="ultimate" />
      <item value="ultimate Target Class" />
      <item value="Post-process the given merged bean definition for the specified bean." />
      <item value="Eager" />
      <item value="EXCLUSION" />
      <item value="Independent" />
      <item value="is Independent" />
      <item value="consider" />
      <item value="Considers" />
      <item value="consider Inherited" />
      <item value="Can use {@link CandidateComponentsIndex the index} if it is available of scans the classpath otherwise" />
      <item value="Splice onto queue and try to set waitStatus of predecessor to indicate that thread is (probably) waiting. If cancelled or attempt to set waitStatus fails, wake up to resync (in which case the waitStatus can be transiently and harmlessly wrong)." />
      <item value="Splice" />
      <item value="Removes and transfers nodes until hit non-cancelled one or null. Split out from signal in part to encourage compilers to inline the case of no waiters." />
      <item value="Returns true if a node, always one that was initially placed on a condition queue, is now waiting to reacquire on sync queue" />
      <item value="successor" />
      <item value="is Held Exclusively" />
      <item value="set Head And Propagate" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="2963" />
        <entry key="ENGLISH" value="2964" />
        <entry key="ALBANIAN" value="1" />
        <entry key="AZERBAIJANI" value="1" />
        <entry key="ICELANDIC" value="1" />
        <entry key="DANISH" value="8" />
        <entry key="GERMAN" value="8" />
        <entry key="FRENCH" value="14" />
        <entry key="FINNISH" value="1" />
        <entry key="DUTCH" value="1" />
        <entry key="CATALAN" value="2" />
        <entry key="KURDISH" value="1" />
        <entry key="ROMANIAN" value="5" />
        <entry key="PORTUGUESE" value="6" />
        <entry key="SWEDISH" value="2" />
        <entry key="SLOVAK" value="1" />
        <entry key="WELSH" value="1" />
        <entry key="SPANISH" value="13" />
        <entry key="HUNGARIAN" value="5" />
        <entry key="ITALIAN" value="2" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1615017601272" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20191101000350914" />
      </app-key>
    </option>
    <option name="primaryFontFamily" value="JetBrains Mono" />
    <option name="translator" value="BAIDU" />
  </component>
</application>