<application>
  <component name="AppStorage">
    <histories>
      <item value="The region specified by the &lt;tt&gt;position&lt;/tt&gt; and &lt;tt&gt;size&lt;/tt&gt; * parameters need not be contained within, or even overlap, the actual * underlying file. Lock regions are fixed in size; if a locked region * initially contains the end of the file and the file grows beyond the * region then the new portion of the file will not be covered by the lock. * If a file is expected to grow in size and a lock on the entire file is * required then a region starting at zero, and no smaller than the * expected maximum size of the file, should be locked. The zero-argument * {@link #lock()} method simply locks a region of size {@link * Long#MAX_VALUE}" />
      <item value="overlap" />
      <item value="An invocation of this method will block until the region can be * locked, this channel is closed, or the invoking thread is interrupted, * whichever comes first" />
      <item value="Acquires" />
      <item value="Truncates" />
      <item value="Prepender" />
      <item value="Transfers" />
      <item value="粘包" />
      <item value="粘包，拆包" />
      <item value="length Adjustment" />
      <item value="register" />
      <item value="registry" />
      <item value="allready" />
      <item value="未验证" />
      <item value="域名" />
      <item value="he decoder counts the extra * header into the frame length calculation" />
      <item value="because the decoder always takes the length of the prepended data into * account during frame length calculation" />
      <item value="prepended" />
      <item value="Because the length value in this example message is always greater than the body length by 2, we specify -2 as lengthAdjustment for compensation" />
      <item value="specified" />
      <item value="simplistic" />
      <item value="he decoder assumes * that the length field represents the number of the bytes that follows the * length field" />
      <item value="assumes" />
      <item value="represents" />
      <item value="do not strip header" />
      <item value="strip" />
      <item value="Length Field Based Frame Decoder" />
      <item value="which is often seen in * proprietary client-server protocols" />
      <item value="proprietary" />
      <item value="particularly" />
      <item value="Initiates an orderly shutdown in which previously submitted * tasks are executed," />
      <item value="Initiates" />
      <item value="normal" />
      <item value="appropriate for purposes" />
      <item value="guarantees" />
      <item value="designated" />
      <item value="odd" />
      <item value="Once we compile against later versions of Java we can replace the Unsafe usage here by varhandles" />
      <item value="volatile" />
      <item value="volidate" />
      <item value="retry Release 0" />
      <item value="non Volatile Raw Cnt" />
      <item value="raw Increment" />
      <item value="raw" />
      <item value="rawIncrement" />
      <item value="Normalize" />
      <item value="review" />
      <item value="check Positive Or Zero" />
      <item value="finished" />
      <item value="locked" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="664" />
        <entry key="ENGLISH" value="665" />
        <entry key="DANISH" value="3" />
        <entry key="FRENCH" value="5" />
        <entry key="CATALAN" value="2" />
        <entry key="KANNADA" value="1" />
        <entry key="LATVIAN" value="3" />
        <entry key="ROMANIAN" value="1" />
        <entry key="SWEDISH" value="1" />
        <entry key="SLOVENIAN" value="1" />
        <entry key="SPANISH" value="1" />
        <entry key="GREEK" value="1" />
        <entry key="ITALIAN" value="2" />
      </map>
    </option>
  </component>
</application>