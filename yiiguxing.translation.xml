<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="447" />
    <option name="newTranslationDialogWidth" value="1502" />
    <option name="newTranslationDialogX" value="2" />
    <option name="newTranslationDialogY" value="526" />
    <histories>
      <item value="rules out" />
      <item value="unpredictable or erroneous" />
      <item value="unpredictable" />
      <item value="designed" />
      <item value="if the provided stream operations do not offer the desired functionality" />
      <item value="if the provided stream operations do not offer the desired functionality, the iterator() and spliterator() operations can be used to perform a controlled traversal." />
      <item value="desired functionality" />
      <item value="and are instead concerned with declaratively describing their source and the computational operations" />
      <item value="manipulate" />
      <item value="Collections are primarily concerned with the efficient management of, and access to, their elements" />
      <item value="while bearing some superficial similarities" />
      <item value="and source elements are consumed only as needed." />
      <item value="which produces a result or side-effect" />
      <item value="side-effect" />
      <item value="zero or more intermediate operations (which transform a stream into another stream, such as filter(Predicate))" />
      <item value="consists of a source" />
      <item value="composed" />
      <item value="all of which are referred to as &quot;streams&quot; and conform to the characteristics and restrictions described here." />
      <item value="restrictions" />
      <item value="conform to" />
      <item value="referred to as" />
      <item value="there are primitive specializations for" />
      <item value="primitive specializations" />
      <item value="spliterator" />
      <item value="which governs the behavior of all stream types." />
      <item value="governs" />
      <item value="widgets" />
      <item value="illustrates" />
      <item value="which are sequences of" />
      <item value="In contrast to org.springframework.util.AntPathMatcher, is supported only at the end of a pattern. For example pages{} is valid but pages{}details is not. The same applies also to the capturing variant {spring}. The aim is to eliminate ambiguity when comparing patterns for specificity. Examples" />
      <item value="eliminate" />
      <item value="In contrast to" />
      <item value="Representation of a parsed path pattern. Includes a chain of path elements for fast matching and accumulates computed state for quick comparison of patterns" />
      <item value="it is possible to write a custom mapping based on session state, cookie state or many other variables." />
      <item value="No other MVC framework seems to be equally flexible." />
      <item value="optionally accompanied by" />
      <item value="accompanied" />
      <item value="scenario" />
      <item value="cause" />
      <item value="This method will only be called on successful remote rpc execution, that means, the service in on remote received the request and the result (normal or exceptional) returned successfully." />
      <item value="vulnerable&#10;" />
      <item value="Earlier initialize heart-beat when the spring container starts when the transport dependency is on classpath, the configuration is effective." />
      <item value="This has no effect on collections and maps as these types are automatically identified." />
      <item value="Indicates that a field in a {@link ConfigurationProperties @ConfigurationProperties} object should be treated as if it were a nested type. This annotation has no bearing on the actual binding processes, but it is used by the {@code spring-boot-configuration-processor} as a hint that a field is not bound as a single value. When this is specified, a nested group is created for the field and its type is harvested." />
      <item value="SERVER ERROR" />
      <item value="he {@link NullContext} indicates that the amount of context has exceeded the threshold, so here init the entry only. No rule checking will be done." />
      <item value="get Cluster Universal State" />
      <item value="Infinity" />
      <item value="泡茶&#10;" />
      <item value="boil water" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="7451" />
        <entry key="ENGLISH" value="7452" />
        <entry key="CHINESE_CLASSICAL" value="1" />
        <entry key="ALBANIAN" value="1" />
        <entry key="AZERBAIJANI" value="1" />
        <entry key="ICELANDIC" value="1" />
        <entry key="POLISH" value="1" />
        <entry key="DANISH" value="9" />
        <entry key="GERMAN" value="11" />
        <entry key="FRENCH" value="19" />
        <entry key="FINNISH" value="1" />
        <entry key="DUTCH" value="1" />
        <entry key="CATALAN" value="4" />
        <entry key="KURDISH" value="1" />
        <entry key="ROMANIAN" value="7" />
        <entry key="MALAY" value="2" />
        <entry key="NORWEGIAN" value="3" />
        <entry key="PORTUGUESE" value="9" />
        <entry key="SWEDISH" value="4" />
        <entry key="SERBIAN" value="1" />
        <entry key="SLOVAK" value="5" />
        <entry key="WELSH" value="1" />
        <entry key="SPANISH" value="13" />
        <entry key="HUNGARIAN" value="5" />
        <entry key="ITALIAN" value="6" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1663035655280" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20191101000350914" />
      </app-key>
    </option>
    <option name="primaryFontFamily" value="JetBrains Mono" />
    <option name="translator" value="BAIDU" />
  </component>
</application>