<application>
  <component name="AppStorage">
    <histories>
      <item value="bytes To Read" />
      <item value="individual Read Max" />
      <item value="fix Origin User Expire" />
      <item value="Slf 4 j" />
      <item value="pwd Check Passed" />
      <item value="pwd Check Passwd" />
      <item value="NUMBER OF ERRORS" />
      <item value="NUMBER OR ERROS" />
      <item value="ERRORS OF INPUT" />
      <item value="输入错误次数" />
      <item value="IDENTITY PREFIX" />
      <item value="String" />
      <item value="touch" />
      <item value="PermGen Space" />
      <item value="PermGen" />
      <item value="Java Heap Out Of Memory Demo" />
      <item value="hello" />
      <item value="verbose" />
      <item value="Ωverbose" />
      <item value="intern" />
      <item value="suppress" />
      <item value="set Residue Times" />
      <item value="residue Times" />
      <item value="get Outcomes" />
      <item value="fire" />
      <item value="Try reading the class file via ASM for deterministic declaration order... // Unfortunately, the JVM's standard reflection returns methods in arbitrary // order, even between different runs of the same application on the same JVM" />
      <item value="originating" />
      <item value="Check the set of scanned definitions for any further config classes and parse recursively if needed" />
      <item value="Register the ImportRegistry as a bean in order to support ImportAware @Configuration classes" />
      <item value="consider Inherited" />
      <item value="Assignable Type Filter" />
      <item value="fledged" />
      <item value="for example strategy implementations * in Spring's component scanning support (where the default definition class is * {@link org.springframework.context.annotation.ScannedGenericBeanDefinition}, * which also implements the AnnotatedBeanDefinition interface)" />
      <item value="This GenericBeanDefinition variant is mainly useful for testing code that expects * to operate on an AnnotatedBeanDefinition, for example strategy implementations * in Spring's component scanning support (where the default definition class is * {@link org.springframework.context.annotation.ScannedGenericBeanDefinition}, * which also implements the AnnotatedBeanDefinition interface)." />
      <item value="but distinguishes by type beans that have been &lt;em&gt;scanned&lt;/em&gt; vs those that have * been otherwise registered or detected by other means." />
      <item value="It rather retrieves all relevant metadata from the &quot;.class&quot; file itself, * parsed with the ASM ClassReader" />
      <item value="independent" />
      <item value="n a form that does not necessarily require the * class-loading." />
      <item value="enclosing" />
      <item value="If this merged annotation was created {@linkplain #from(Annotation) from} * an annotation instance, that annotation will be returned unmodified if it is * not &lt;em&gt;synthesizable&lt;/em&gt;. An annotation is considered synthesizable if * one of the following is true." />
      <item value="Synthesize" />
      <item value="Synthe" />
      <item value="The result is synthesized using a JDK {@link Proxy} and as a result may * incur a computational cost when first invoked." />
      <item value="An annotation is considered synthesizable if * one of the following is true." />
      <item value="The annotation declares attributes that are annotations or arrays of * annotations that are themselves synthesizable" />
      <item value="The annotation is a composed annotation that relies on convention-based * annotation attribute overrides in meta-annotations." />
      <item value="synthesizable" />
      <item value="incur a computational cost when first invoked" />
      <item value="synthesize" />
      <item value="Create a new view of the annotation that exposes non-merged attribute values. Methods from this view will return attribute values with only alias mirroring rules applied. Aliases to meta-source attributes will not be applied." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="2360" />
        <entry key="ENGLISH" value="2361" />
        <entry key="ALBANIAN" value="1" />
        <entry key="AZERBAIJANI" value="1" />
        <entry key="ICELANDIC" value="1" />
        <entry key="DANISH" value="7" />
        <entry key="GERMAN" value="8" />
        <entry key="FRENCH" value="11" />
        <entry key="FINNISH" value="1" />
        <entry key="DUTCH" value="1" />
        <entry key="CATALAN" value="2" />
        <entry key="KURDISH" value="1" />
        <entry key="ROMANIAN" value="5" />
        <entry key="PORTUGUESE" value="5" />
        <entry key="SWEDISH" value="2" />
        <entry key="SLOVAK" value="1" />
        <entry key="WELSH" value="1" />
        <entry key="SPANISH" value="11" />
        <entry key="HUNGARIAN" value="5" />
        <entry key="ITALIAN" value="2" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20191101000350914" />
      </app-key>
    </option>
    <option name="ignoreRegExp" value="" />
  </component>
</application>