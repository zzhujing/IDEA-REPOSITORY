<application>
  <component name="AppStorage">
    <histories>
      <item value="additivity" />
      <item value="flyer goods" />
      <item value="Biz Exception" />
      <item value="Hint Exception" />
      <item value="标签" />
      <item value="restriction" />
      <item value="registry" />
      <item value="register" />
      <item value="update Manual Singleton Names" />
      <item value="find Method With Minimal Parameters" />
      <item value="Extension of the {@link FactoryBean} interface. Implementations may * indicate whether they always return independent instances, for the * case where their {@link #isSingleton()} implementation returning * {@code false} does not clearly indicate independent instances. * * &lt;p&gt;Plain {@link FactoryBean} implementations which do not implement * this extended interface are simply assumed to always return independent * instances if their {@link #isSingleton()} implementation returns * {@code false}; the exposed object is only accessed on demand. * * &lt;p&gt;&lt;b&gt;NOTE:&lt;/b&gt; This interface is a special purpose interface, mainly for * internal use within the framework and within collaborating frameworks. * In general, application-provided FactoryBeans should simply implement * the plain {@link FactoryBean} interface. New methods might be added * to this extended interface even in point releases." />
      <item value="independent" />
      <item value="indicate" />
      <item value="Class Derived Bean Definition" />
      <item value="Preferred constructors for default construction" />
      <item value="minimal" />
      <item value="Obtain a reference for early access to the specified bean, * typically for the purpose of resolving a circular reference. * &lt;p&gt;This callback gives post-processors a chance to expose a wrapper * early - that is, before the target bean instance is fully initialized. * The exposed object should be equivalent to the what * {@link #postProcessBeforeInitialization} / {@link #postProcessAfterInitialization} * would expose otherwise. Note that the object returned by this method will * be used as bean reference unless the post-processor returns a different * wrapper from said post-process callbacks. In other words: Those post-process * callbacks may either eventually expose the same reference or alternatively * return the raw bean instance from those subsequent callbacks (if the wrapper * for the affected bean has been built for a call to this method already, * it will be exposes as final bean reference by default)." />
      <item value="equivalent" />
      <item value="构建一些常用的docker镜像" />
      <item value="常用" />
      <item value="scenario" />
      <item value="REUSE" />
      <item value="Internal utility used to load" />
      <item value="lite" />
      <item value="as appropriate based on an" />
      <item value="Hierarchical Bean Factory" />
      <item value="intervals" />
      <item value="uri Variables" />
      <item value="traversing the parent bean definition" />
      <item value="traversing" />
      <item value="remove Manual Singleton Name" />
      <item value="actual * type of underlying resource" />
      <item value="underlying" />
      <item value="actual" />
      <item value="Input Stream Source" />
      <item value="eager" />
      <item value="// Do not allow eager init for type matching in case of a prioritized post-processor." />
      <item value="optimized" />
      <item value="individual" />
      <item value="instantiated" />
      <item value="Presents a view onto an annotation where attribute values may * have been &quot;merged&quot; from different source values" />
      <item value="A single merged annotation returned from a MergedAnnotations collection. Presents a view onto an annotation where attribute values may have been &quot;merged&quot; from different source values. Attribute values may be accessed using the various get methods. For example, to access an int attribute the getInt(String) method would be used. Note that attribute values are not converted when accessed. For example, it is not possible to call getString(String) if the underlying attribute is an int. The only exception to this rule is Class and Class[] values which may be accessed as String and String[] respectively to prevent potential early class initialization. If necessary, a MergedAnnotation can be synthesized back into an actual Annotation." />
      <item value="intended" />
      <item value="corresponding" />
      <item value="canonical" />
      <item value="intern" />
      <item value="Ensure that a release propagates, even if there are other * in-progress acquires/releases. This proceeds in the usual * way of trying to unparkSuccessor of head if it needs * signal. But if it does not, status is set to PROPAGATE to * ensure that upon release, propagation continues. * Additionally, we must loop in case a new node is added * while we are doing this. Also, unlike other uses of * unparkSuccessor, we need to know if CAS to reset status * fails, if so rechecking" />
      <item value="Release action for shared mode -- signals successor and ensures propagation. (Note: For exclusive mode, release just amounts to calling unparkSuccessor of head if it needs signal.)" />
      <item value="If successor needs signal, try to set pred's next-link // so it will get one. Otherwise wake it up to propagate" />
      <item value="compose" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1425" />
        <entry key="ENGLISH" value="1426" />
        <entry key="DANISH" value="7" />
        <entry key="GERMAN" value="6" />
        <entry key="FRENCH" value="8" />
        <entry key="FINNISH" value="1" />
        <entry key="DUTCH" value="1" />
        <entry key="PORTUGUESE" value="4" />
        <entry key="SWEDISH" value="1" />
        <entry key="SPANISH" value="7" />
        <entry key="HUNGARIAN" value="5" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20191101000350914" />
      </app-key>
    </option>
    <option name="ignoreRegExp" value="" />
    <option name="translator" value="fanyi.baidu" />
  </component>
</application>