<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="369" />
    <option name="newTranslationDialogWidth" value="896" />
    <option name="newTranslationDialogX" value="987" />
    <option name="newTranslationDialogY" value="460" />
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="no guarantees that {@code AopContext} access will work" />
      <item value="Methods annotated with '@Transactional' must be overridableœ&#10;" />
      <item value="Methods annotated with '@Transactional' must be overridableœ" />
      <item value="work it out" />
      <item value="rely on&#10;" />
      <item value="In particular&#10;" />
      <item value="In par" />
      <item value="Based on the propagation behavior definitions analogous to EJB CMT attributes" />
      <item value="compliant" />
      <item value="corresponding" />
      <item value="qualifier" />
      <item value="introspection&#10;" />
      <item value="introspect&#10;" />
      <item value="int" />
      <item value="traversed" />
      <item value="retrieval" />
      <item value="perspective" />
      <item value="discarded" />
      <item value="an {@link Transactional} annotation on such a method within a local call will be ignored since Spring's interceptor does not even kick in for such a runtime scenario. For a more advanced mode of interception, consider switching this to {@link AdviceModeASPECTJ}." />
      <item value="Please note that proxy mode allows for interception of calls through the proxy only" />
      <item value="This approach may be desirable simply because it is more explicit, or it may be necessary in order to distinguish between two TransactionManager beans present in the same container. As the name suggests, the annotationDrivenTransactionManager() will be the one used for processing @Transactional methods. See TransactionManagementConfigurer Javadoc for further details.&#10;" />
      <item value="approach&#10;" />
      <item value="establish&#10;" />
      <item value="scenarios&#10;" />
      <item value="Ω" />
      <item value="demonstrates&#10;" />
      <item value="imperative" />
      <item value="&#10;imperative" />
      <item value="Ωimperative" />
      <item value="Ωim" />
      <item value="similar&#10;" />
      <item value="CGLIB GeneratorStrategy variant which exposes the application ClassLoader as current thread context ClassLoader for the time of class generation. The ASM ClassWriter in Spring's ASM variant will pick it up when doing common superclass resolution." />
      <item value="Class Loader Aware Generator Strategy" />
      <item value="a cached byte array for every {@code loadClass} call in order to pick up recently loaded types in the parent ClassLoader" />
      <item value="Redefines" />
      <item value="opaque" />
      <item value="Objenesis Cglib Aop Proxy" />
      <item value="Objenesis" />
      <item value="configuration" />
      <item value="Return whether proxies should perform aggressive optimizations" />
      <item value="aware&#10;" />
      <item value="leave" />
      <item value="We need to leave all regular beans uninitialized to let the auto-proxy creator apply to them!" />
      <item value="Retrieval" />
      <item value="if the bean is identified as one to proxy by the subclass" />
      <item value="distinguishes" />
      <item value="Auto-proxying will occur even if there is no advice" />
      <item value="They can also return additional interceptors that should just be applied to the specific bean instance" />
      <item value="particularly&#10;" />
      <item value="parti" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="2683" />
        <entry key="ENGLISH" value="2684" />
        <entry key="ALBANIAN" value="1" />
        <entry key="AZERBAIJANI" value="1" />
        <entry key="ICELANDIC" value="1" />
        <entry key="DANISH" value="7" />
        <entry key="GERMAN" value="8" />
        <entry key="FRENCH" value="14" />
        <entry key="FINNISH" value="1" />
        <entry key="DUTCH" value="1" />
        <entry key="CATALAN" value="2" />
        <entry key="KURDISH" value="1" />
        <entry key="ROMANIAN" value="5" />
        <entry key="PORTUGUESE" value="6" />
        <entry key="SWEDISH" value="2" />
        <entry key="SLOVAK" value="1" />
        <entry key="WELSH" value="1" />
        <entry key="SPANISH" value="13" />
        <entry key="HUNGARIAN" value="5" />
        <entry key="ITALIAN" value="2" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1612682102076" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20191101000350914" />
      </app-key>
    </option>
    <option name="primaryFontFamily" value="JetBrains Mono" />
    <option name="translator" value="BAIDU" />
  </component>
</application>