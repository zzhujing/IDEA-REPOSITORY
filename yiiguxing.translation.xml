<application>
  <component name="AppStorage">
    <histories>
      <item value="compatible" />
      <item value="rather than calling the constructor explicitly." />
      <item value="t yields slight performance advantage over using a hash * table, and it is useful when accessed frequently." />
      <item value="yields" />
      <item value="constant" />
      <item value="variant" />
      <item value="Sharable" />
      <item value="aware" />
      <item value="offers an easy way to initialize a {@link Channel} once it was * registered to its {@link EventLoop}." />
      <item value="regardless" />
      <item value="various recommended * ways to manage stateful information." />
      <item value="refer" />
      <item value="is related with a handle" />
      <item value="A non-trivial" />
      <item value="various" />
      <item value="notify" />
      <item value="Among" />
      <item value="interact" />
      <item value="attached" />
      <item value="gradually" />
      <item value="readable bytes if the read operation was not able to fill a certain * amount of the allocated buffer two times consecutively" />
      <item value="predictor" />
      <item value="Adaptive Recv Byte Buf Allocator" />
      <item value="a typical server" />
      <item value="encryption" />
      <item value="represented" />
      <item value="Business Logic Handler" />
      <item value="but your mileage may vary depending on the complexity and characteristics of the * protocol and business logic" />
      <item value="the event propagation is usually done:" />
      <item value="propagation" />
      <item value="fire" />
      <item value="fire Channel Unregistered" />
      <item value="to shorten the stack depth:" />
      <item value="certain" />
      <item value="On top of this principle" />
      <item value="principle" />
      <item value="traffic" />
      <item value="discarded" />
      <item value="silently" />
      <item value="goes beyond" />
      <item value="beyond" />
      <item value="f an inbound event goes beyond the top inbound handler, it is discarded * silently, or logged if it needs your attention" />
      <item value="peer via" />
      <item value="peer" />
      <item value="bottom-up" />
      <item value="Internal" />
      <item value="diagram" />
      <item value="advanced" />
      <item value="mall enough * not to waste its space" />
      <item value="it is also responsible for handling their * life-cycle and allows shutting them down in a global fashio" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="600" />
        <entry key="ENGLISH" value="601" />
        <entry key="DANISH" value="3" />
        <entry key="FRENCH" value="3" />
        <entry key="CATALAN" value="2" />
        <entry key="KANNADA" value="1" />
        <entry key="LATVIAN" value="3" />
        <entry key="ROMANIAN" value="1" />
        <entry key="SWEDISH" value="1" />
        <entry key="SLOVENIAN" value="1" />
        <entry key="SPANISH" value="1" />
        <entry key="GREEK" value="1" />
        <entry key="ITALIAN" value="2" />
      </map>
    </option>
  </component>
</application>