<application>
  <component name="AppStorage">
    <histories>
      <item value="greater Than" />
      <item value="substitution" />
      <item value="The &lt;i&gt;interrupted * status&lt;/i&gt; of the thread is unaffected by this method" />
      <item value="has been interrupted" />
      <item value="Interrupting a thread that is not alive need not have any effect" />
      <item value="invocation" />
      <item value="Unless the current thread is interrupting itself, which is * always permitted" />
      <item value="permitted" />
      <item value="in Creation Check Exclusions" />
      <item value="Circular" />
      <item value="Cycle" />
      <item value="Circular References Demo" />
      <item value="Circular Reference" />
      <item value="Circular Reference Demo" />
      <item value="Consider" />
      <item value="Try reading the class file via ASM for deterministic declaration order... // Unfortunately, the JVM's standard reflection returns methods in arbitrary // order, even between different runs of the same application on the same JVM." />
      <item value="Ω" />
      <item value="legend" />
      <item value="series Layout By" />
      <item value="smooth" />
      <item value="material Apply Num" />
      <item value="SINGLE SLICE COST" />
      <item value="Tries" />
      <item value="REFUSING TRAFFIC" />
      <item value="orig" />
      <item value="dest" />
      <item value="阶段类型" />
      <item value="段" />
      <item value="forepart" />
      <item value="is Annotation Present" />
      <item value="calc Formula" />
      <item value="计算公式" />
      <item value="必须的话" />
      <item value="必须" />
      <item value="mab Efficiency" />
      <item value="tooltip" />
      <item value="y Axis" />
      <item value="x Axis" />
      <item value="retry Resolve" />
      <item value="重新解析" />
      <item value="retrive" />
      <item value="invalid hexadecimal representation of an ObjectId" />
      <item value="hexadecimal" />
      <item value="输入" />
      <item value="particular" />
      <item value="Stub Property Source" />
      <item value="get Scheme Specific Part" />
      <item value="qualifier annotations have to be local" />
      <item value="Ignore the given dependency interface for autowiring. * &lt;p&gt;This will typically be used by application contexts to register * dependencies that are resolved in other ways, like BeanFactory through * BeanFactoryAware or ApplicationContext through ApplicationContextAware. * &lt;p&gt;By default, only the BeanFactoryAware interface is ignored. * For further types to ignore, invoke this method for each type." />
      <item value="exact preservation * of functionality may be maintained by continuing to use" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="2023" />
        <entry key="ENGLISH" value="2024" />
        <entry key="ALBANIAN" value="1" />
        <entry key="AZERBAIJANI" value="1" />
        <entry key="DANISH" value="7" />
        <entry key="GERMAN" value="8" />
        <entry key="FRENCH" value="10" />
        <entry key="FINNISH" value="1" />
        <entry key="DUTCH" value="1" />
        <entry key="CATALAN" value="1" />
        <entry key="KURDISH" value="1" />
        <entry key="ROMANIAN" value="3" />
        <entry key="PORTUGUESE" value="5" />
        <entry key="SWEDISH" value="1" />
        <entry key="SLOVAK" value="1" />
        <entry key="SPANISH" value="11" />
        <entry key="HUNGARIAN" value="5" />
        <entry key="ITALIAN" value="2" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20191101000350914" />
      </app-key>
    </option>
    <option name="ignoreRegExp" value="" />
  </component>
</application>