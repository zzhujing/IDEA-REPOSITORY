<application>
  <component name="AppStorage">
    <histories>
      <item value="synthetic" />
      <item value="sanitized Path Within App" />
      <item value="Path Exposing Handler Interceptor" />
      <item value="raw" />
      <item value="get Path Within Application" />
      <item value="matching Beans" />
      <item value="indicate" />
      <item value="indicates Multiple Beans" />
      <item value="against" />
      <item value="Qualifier" />
      <item value="recommended" />
      <item value="render" />
      <item value="Web Async Manager" />
      <item value="inheritable" />
      <item value="register Callable Inç‰¹" />
      <item value="get Session Mutex" />
      <item value="mutex" />
      <item value="regardless of the outcome" />
      <item value="regardless" />
      <item value="PATCH" />
      <item value="Interface for web-based theme resolution strategies that allows for * both theme resolution via the request and theme modification via * request and response" />
      <item value="installed" />
      <item value="prior to being refreshed" />
      <item value="prior" />
      <item value="Called by the servlet container to indicate to a servlet that the servlet * is being placed into service" />
      <item value="init Strategies" />
      <item value="treats" />
      <item value="tokenize To String Array" />
      <item value="responsibility" />
      <item value="intentionally" />
      <item value="SCI processing is performed regardless of the setting of metadata-complete. SCI processing can be controlled per JAR file via fragment ordering. If absolute ordering is defined, then only the JARs included in the ordering will be processed for SCIs. To disable SCI processing completely, an empty absolute ordering may be defined" />
      <item value="via" />
      <item value="occur" />
      <item value="indicates" />
      <item value="which support programmatic registration of servlet instances" />
      <item value="may now be injected with a web * application context, rather than creating its own internally" />
      <item value="rather than creating its own internally." />
      <item value="Out-of-the-box implementations work via HTTP accept header, cookie, or session" />
      <item value="theme resolution" />
      <item value="multipart requests" />
      <item value="multipart" />
      <item value="corresponding" />
      <item value="certain" />
      <item value="specified" />
      <item value="for each handler type to handle a request" />
      <item value="through" />
      <item value="allowing parameterization of the core MVC workflow" />
      <item value="ability" />
      <item value="can support mapped interceptors but do not * have to" />
      <item value="to" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="990" />
        <entry key="ENGLISH" value="991" />
        <entry key="DANISH" value="5" />
        <entry key="GERMAN" value="5" />
        <entry key="FRENCH" value="5" />
        <entry key="FINNISH" value="1" />
        <entry key="PORTUGUESE" value="2" />
        <entry key="SWEDISH" value="1" />
        <entry key="SPANISH" value="6" />
        <entry key="HUNGARIAN" value="4" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20191101000350914" />
        <option name="appKeyConfigured" value="true" />
      </app-key>
    </option>
    <option name="ignoreRegExp" value="" />
    <option name="translator" value="fanyi.baidu" />
  </component>
</application>