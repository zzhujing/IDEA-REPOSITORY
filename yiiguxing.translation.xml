<application>
  <component name="AppStorage">
    <histories>
      <item value="Guarantee" />
      <item value="Delegation" />
      <item value="original Bean Name" />
      <item value="canonical Name" />
      <item value="variant" />
      <item value="Purpose" />
      <item value="in case of creation errors" />
      <item value="multiple candidates found with none marked as primary" />
      <item value="Qualifier" />
      <item value="英雄联盟" />
      <item value="联盟" />
      <item value="which allows to register existing singleton instances programmatically" />
      <item value="programmatically" />
      <item value="Capable" />
      <item value="Note that this interface is not implemented by * {@link org.springframework.context.ApplicationContext} facades, * as it is hardly ever used by application code. That said, it is available * from an application context too, accessible through ApplicationContext's * {@link org.springframework.context.ApplicationContext#getAutowireCapableBeanFactory()} * method." />
      <item value="Note that this interface is not implemented by * {@link org.springframework.context.ApplicationContext} facades, * as it is hardly ever used by application code. That said, it is available * from an application context too, accessible through ApplicationContext's * {@link org.springframework.context.ApplicationContext#getAutowireCapableBeanFactory()} * method" />
      <item value="facades" />
      <item value="This is particularly useful for WebWork Actions and * Tapestry Page objects, for example" />
      <item value="Integration code for other frameworks can leverage this interface to * wire and populate existing bean instances that Spring does not control * the lifecycle of" />
      <item value="leverage" />
      <item value="Integration code" />
      <item value="Integration" />
      <item value="This subinterface of BeanFactory is not meant to be used in normal * application code: stick to {@link org.springframework.beans.factory.BeanFactory} * or {@link org.springframework.beans.factory.ListableBeanFactory} for * typical use cases" />
      <item value="stick" />
      <item value="functionality" />
      <item value="capable" />
      <item value="bean factories that are capable of * autowiring" />
      <item value="beans Of Type Including Ancestors" />
      <item value="Ancestors" />
      <item value="bean" />
      <item value="hierarchical" />
      <item value="Ω递归```" />
      <item value="Ω递归" />
      <item value="alternative" />
      <item value="ancestor" />
      <item value="Abstract Autowire Capable Bean Factory" />
      <item value="predict" />
      <item value="This callback will be applied to bean definitions with their bean class, * as well as to factory-method definitions in which case the returned bean type * will be passed in here" />
      <item value="further" />
      <item value="the bean creation process * will be short-circuited" />
      <item value="effectively" />
      <item value="post-processor having kicked in" />
      <item value="kicked in" />
      <item value="kicked" />
      <item value="indicates" />
      <item value="in Creation Check Exclusions" />
      <item value="in creation checks" />
      <item value="creation failed" />
      <item value="dereference" />
      <item value="consequence" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="741" />
        <entry key="ENGLISH" value="742" />
        <entry key="DANISH" value="3" />
        <entry key="GERMAN" value="5" />
        <entry key="FRENCH" value="4" />
        <entry key="FINNISH" value="1" />
        <entry key="PORTUGUESE" value="2" />
        <entry key="SWEDISH" value="1" />
        <entry key="SPANISH" value="4" />
        <entry key="HUNGARIAN" value="4" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20191101000350914" />
        <option name="appKeyConfigured" value="true" />
      </app-key>
    </option>
    <option name="ignoreRegExp" value="" />
  </component>
</application>