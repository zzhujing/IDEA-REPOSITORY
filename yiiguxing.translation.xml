<application>
  <component name="AppStorage">
    <histories>
      <item value="navigation" />
      <item value="Navigable" />
      <item value="Navigable Map" />
      <item value="Wildcard Type" />
      <item value="parameterized" />
      <item value="formal" />
      <item value="variable" />
      <item value="get Upper Bounds" />
      <item value="wildcard" />
      <item value="conflicting Getters" />
      <item value="case Insensitive Property Map" />
      <item value="Property Tokenizer" />
      <item value="Ambiguous" />
      <item value="Ambiguous Method Invoker" />
      <item value="周期" />
      <item value="循环" />
      <item value="玄幻" />
      <item value="(hint: specify index/type/name arguments for simple parameters to avoid type ambiguities" />
      <item value="温度" />
      <item value="EXCEPTION" />
      <item value="异常" />
      <item value="profile" />
      <item value="attempting" />
      <item value="At the time that the condition is evaluated, all {@code @Configuration}s * will have been parsed" />
      <item value="The Condition should be evaluated when adding a regular (non @Configuration) bean. The condition will not prevent @Configuration classes from being added. At the time that the condition is evaluated, all @Configurations will have been parsed." />
      <item value="prevent" />
      <item value="The Condition should be evaluated as a @Configuration class is being parsed. If the condition does not match at this point, the @Configuration class will not be added." />
      <item value="The various configuration phases where the condition could be evaluated." />
      <item value="Configuration Phase" />
      <item value="A Condition that offers more fine-grained control when used with @Configuration. Allows certain Conditions to adapt when they match based on the configuration phase. For example, a condition that checks if a bean has already been registered might choose to only be evaluated during the REGISTER_BEAN ConfigurationCondition.ConfigurationPhase." />
      <item value="Ω" />
      <item value="annotated methods in order to ensure proper * handling of bean semantics such as scoping and AOP proxying" />
      <item value="proper" />
      <item value="login" />
      <item value="validate Scan Configuration" />
      <item value="contains Descendant Of" />
      <item value="origin" />
      <item value="查询出其具体地址从小区开始" />
      <item value="Trace" />
      <item value="Stack Trace Element" />
      <item value="lettuce" />
      <item value="未知" />
      <item value="concat" />
      <item value="xnio" />
      <item value="Access Strategy" />
      <item value="通行策略" />
      <item value="Pass Strategy" />
      <item value="show Epidemic Code" />
      <item value="Origin Tracked Map" />
      <item value="escaped" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1117" />
        <entry key="ENGLISH" value="1118" />
        <entry key="DANISH" value="6" />
        <entry key="GERMAN" value="6" />
        <entry key="FRENCH" value="7" />
        <entry key="FINNISH" value="1" />
        <entry key="PORTUGUESE" value="2" />
        <entry key="SWEDISH" value="1" />
        <entry key="SPANISH" value="6" />
        <entry key="HUNGARIAN" value="4" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20191101000350914" />
        <option name="appKeyConfigured" value="true" />
      </app-key>
    </option>
    <option name="ignoreRegExp" value="" />
    <option name="translator" value="fanyi.baidu" />
  </component>
</application>