<application>
  <component name="AppStorage">
    <histories>
      <item value="stamp" />
      <item value="Stamp" />
      <item value="Suspension Pattern" />
      <item value="Guarded Suspension" />
      <item value="detecting" />
      <item value="It is rarely appropriate to use this method." />
      <item value="detailed profiling" />
      <item value="Yield is a heuristic attempt to improve relative progression * between threads that would otherwise over-utilise a CPU" />
      <item value="hint" />
      <item value="yield" />
      <item value="positive" />
      <item value="The table is probably corrupted" />
      <item value="corrupted" />
      <item value="guaranteed" />
      <item value="inclusive" />
      <item value="from Inclusive" />
      <item value="so for its navigable sub-maps" />
      <item value="recursively" />
      <item value="scalable concurrent {@link ConcurrentNavigableMap} implementation. * The map" />
      <item value="UNVERIFIED" />
      <item value="usable bits of normal node hash" />
      <item value="There is a tradeoff between speed" />
      <item value="tradeoff" />
      <item value="spread" />
      <item value="Stripped-down version of helper class used in previous version, * declared for the sake of serialization compatibility" />
      <item value="平均" />
      <item value="retriver" />
      <item value="性能" />
      <item value="Perfremance" />
      <item value="Perfremanc" />
      <item value="Map Perfremance Test" />
      <item value="perfremance" />
      <item value="prefermance" />
      <item value="演示" />
      <item value="pefance" />
      <item value="Prefermance" />
      <item value="retrieved" />
      <item value="retr" />
      <item value="re" />
      <item value="of the queue is that element that has been on the * queue the longest time" />
      <item value="the bulk operations" />
      <item value="constant" />
      <item value="respect" />
      <item value="transient" />
      <item value="if no expired elements are available in the queue, * this method returns the element that will expire next, * if one exists." />
      <item value="element whose delay expired furthest in the * past" />
      <item value="Delayed" />
      <item value="Holder class to expose the web request in the form of a thread-bound" />
      <item value="Fund Trans Toaccount Transfer" />
      <item value="dual" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="286" />
        <entry key="ENGLISH" value="287" />
        <entry key="DANISH" value="1" />
        <entry key="GERMAN" value="4" />
        <entry key="FRENCH" value="1" />
        <entry key="FINNISH" value="1" />
        <entry key="SWEDISH" value="1" />
        <entry key="SPANISH" value="3" />
        <entry key="HUNGARIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20191101000350914" />
        <option name="appKeyConfigured" value="true" />
      </app-key>
    </option>
    <option name="ignoreRegExp" value="" />
    <option name="translator" value="fanyi.baidu" />
  </component>
</application>