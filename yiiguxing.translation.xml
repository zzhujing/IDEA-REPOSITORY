<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="474" />
    <option name="newTranslationDialogWidth" value="1510" />
    <option name="newTranslationDialogX" value="2573" />
    <option name="newTranslationDialogY" value="507" />
    <histories>
      <item value="Constraint Violation" />
      <item value="do not consist wholly of whitespace" />
      <item value="the encapsulation of validation logic as a first-class citizen in its own right." />
      <item value="the encapsulati in its own right" />
      <item value="encapsulation" />
      <item value="amenable" />
      <item value="tier" />
      <item value="coupled" />
      <item value="is totally divorced from" />
      <item value="divorced" />
      <item value="totally" />
      <item value="relative" />
      <item value="URL&#10;URI&#10;" />
      <item value="URL&#10;" />
      <item value="conversation&#10;" />
      <item value="领取&#10;" />
      <item value="确认&#10;" />
      <item value="qu" />
      <item value="Assignable" />
      <item value="is Assignable From" />
      <item value="&lt;p&gt;&lt;b&gt;Recommendations for typical Spring configuration scenarios:&lt;b&gt; When a concrete class may be needed in certain scenarios, consider providing stub implementations of your lookup methods. And please remember that lookup methods won't work on beans returned from {@code @Bean} methods in configuration classes; you'll have to resort to {@code @Inject Provider&lt;TargetBean&gt;} or the like instead." />
      <item value="The resolution of the target bean can either be based on the return type ({@code getBean(Class)}) or on a suggested bean name ({@code getBean(String)}), in both cases passing the method's arguments to the {@code getBean} call for applying them as target factory method arguments or constructor arguments." />
      <item value="resolution" />
      <item value="scenarios" />
      <item value="essentially" />
      <item value="qualifier&#10;&#10;" />
      <item value="qualifirer&#10;" />
      <item value="qualifier&#10;" />
      <item value="qua" />
      <item value="signal" />
      <item value="Finally, FactoryBean objects participate in the containing BeanFactory's synchronization of bean creation. There is usually no need for internal synchronization other than for purposes of lazy initialization within the FactoryBean itself (or the like)." />
      <item value="FactoryBean objects participate in the containing BeanFactory's synchronization of bean creation." />
      <item value="participate" />
      <item value="委派" />
      <item value="delegate&#10;" />
      <item value="代理" />
      <item value="delegate" />
      <item value="Implementations are not supposed to rely on annotation-driven injection or other reflective facilities.&lt;b&gt; {@link getObjectType()} {@link getObject()} invocations may arrive early in the bootstrap process, even ahead of any post-processor setup." />
      <item value="even ahead of any post-processor setup" />
      <item value="It can be used for custom components as well; however, this is only common for infrastructure code" />
      <item value="This interface is heavily used within the framework itself" />
      <item value="heavily" />
      <item value="eagerly" />
      <item value="fine-grained" />
      <item value="is always the object that it creates." />
      <item value="individual" />
      <item value="non Unique As Null" />
      <item value="previous&#10;" />
      <item value="prev&#10;" />
      <item value="上次&#10;" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="5468" />
        <entry key="ENGLISH" value="5469" />
        <entry key="CHINESE_CLASSICAL" value="1" />
        <entry key="ALBANIAN" value="1" />
        <entry key="AZERBAIJANI" value="1" />
        <entry key="ICELANDIC" value="1" />
        <entry key="POLISH" value="1" />
        <entry key="DANISH" value="9" />
        <entry key="GERMAN" value="9" />
        <entry key="FRENCH" value="17" />
        <entry key="FINNISH" value="1" />
        <entry key="DUTCH" value="1" />
        <entry key="CATALAN" value="4" />
        <entry key="KURDISH" value="1" />
        <entry key="ROMANIAN" value="7" />
        <entry key="MALAY" value="1" />
        <entry key="PORTUGUESE" value="8" />
        <entry key="SWEDISH" value="3" />
        <entry key="SLOVAK" value="1" />
        <entry key="WELSH" value="1" />
        <entry key="SPANISH" value="13" />
        <entry key="HUNGARIAN" value="5" />
        <entry key="ITALIAN" value="5" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1634526824204" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20191101000350914" />
      </app-key>
    </option>
    <option name="primaryFontFamily" value="JetBrains Mono" />
    <option name="translator" value="BAIDU" />
  </component>
</application>