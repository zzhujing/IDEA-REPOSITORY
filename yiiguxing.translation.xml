<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="447" />
    <option name="newTranslationDialogWidth" value="1502" />
    <option name="newTranslationDialogX" value="2" />
    <option name="newTranslationDialogY" value="526" />
    <histories>
      <item value="Dispatch the request to the container in order to resume processing after concurrent execution in" />
      <item value="An async scenario starts with request processing as usual in a thread (T1). Concurrent request handling can be initiated by calling startCallableProcessing or startDeferredResultProcessing, both of which produce a result in a separate thread (T2). The result is saved and the request dispatched to the container, to resume processing with the saved result in a third thread (T3). Within the dispatched thread (T3), the saved result can be accessed via getConcurrentResult() or its presence detected via hasConcurrentResult()." />
      <item value="mainly intended as an SPI" />
      <item value="intended" />
      <item value="If included via a RequestDispatcher, the current resource will see the originating request. Its own request URI is exposed as a request attribute" />
      <item value="Checks the presence" />
      <item value="Similar to AppenderBase except that derived appenders need to handle thread synchronization on their" />
      <item value="prudent" />
      <item value="ramp up&#10;" />
      <item value="separate connection" />
      <item value="Maximum queue length for incoming connection requests when all possible request processing threads are in use" />
      <item value="truncated" />
      <item value="Caller Runs Policy" />
      <item value="teeing" />
      <item value="When it is easier to use an imperative approach for generating result elements than it is to return them in the form of a Stream." />
      <item value="imperative approach for generating result" />
      <item value="Using this method avoids the overhead of creating a new Stream instance for every group of result elements, as required by flatMap" />
      <item value="Using this method avoids the overhead of creating a new Stream" />
      <item value="When replacing each stream element with a small (possibly zero) number of elements" />
      <item value="This method is preferable to flatMap in the following circumstances" />
      <item value="s preferable to flatMap" />
      <item value="preferable" />
      <item value="spine" />
      <item value="Abstract Spined Buffer" />
      <item value="If a lambda expression is provided as the mapper function argument, additional type information may be necessary for proper inference of the element type &lt;R&gt; of the returned stream. This can be provided in the form of explicit type declarations for the lambda parameters or as an explicit type argument to the mapMulti call. Examples Given a stream of Number objects, the following produces a list containing only the Integer objects:" />
      <item value="When replacing each stream element with a small (possibly zero) number of elements. Using this method avoids the overhead of creating a new Stream instance for every group of result elements, as required by flatMap." />
      <item value="This method is preferable to flatMap in the following circumstances:" />
      <item value="consisting of" />
      <item value="rules out" />
      <item value="unpredictable or erroneous" />
      <item value="unpredictable" />
      <item value="designed" />
      <item value="if the provided stream operations do not offer the desired functionality" />
      <item value="if the provided stream operations do not offer the desired functionality, the iterator() and spliterator() operations can be used to perform a controlled traversal." />
      <item value="desired functionality" />
      <item value="and are instead concerned with declaratively describing their source and the computational operations" />
      <item value="manipulate" />
      <item value="Collections are primarily concerned with the efficient management of, and access to, their elements" />
      <item value="while bearing some superficial similarities" />
      <item value="and source elements are consumed only as needed." />
      <item value="which produces a result or side-effect" />
      <item value="side-effect" />
      <item value="zero or more intermediate operations (which transform a stream into another stream, such as filter(Predicate))" />
      <item value="consists of a source" />
      <item value="composed" />
      <item value="all of which are referred to as &quot;streams&quot; and conform to the characteristics and restrictions described here." />
      <item value="restrictions" />
      <item value="conform to" />
      <item value="referred to as" />
      <item value="there are primitive specializations for" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="7480" />
        <entry key="ENGLISH" value="7481" />
        <entry key="CHINESE_CLASSICAL" value="1" />
        <entry key="ALBANIAN" value="1" />
        <entry key="AZERBAIJANI" value="1" />
        <entry key="ICELANDIC" value="1" />
        <entry key="POLISH" value="1" />
        <entry key="DANISH" value="9" />
        <entry key="GERMAN" value="11" />
        <entry key="FRENCH" value="19" />
        <entry key="FINNISH" value="1" />
        <entry key="DUTCH" value="1" />
        <entry key="CATALAN" value="4" />
        <entry key="KURDISH" value="1" />
        <entry key="ROMANIAN" value="7" />
        <entry key="MALAY" value="2" />
        <entry key="NORWEGIAN" value="3" />
        <entry key="PORTUGUESE" value="9" />
        <entry key="SWEDISH" value="4" />
        <entry key="SERBIAN" value="1" />
        <entry key="SLOVAK" value="5" />
        <entry key="WELSH" value="1" />
        <entry key="SPANISH" value="13" />
        <entry key="HUNGARIAN" value="5" />
        <entry key="ITALIAN" value="6" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1663035655280" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20191101000350914" />
      </app-key>
    </option>
    <option name="primaryFontFamily" value="JetBrains Mono" />
    <option name="translator" value="BAIDU" />
  </component>
</application>