<application>
  <component name="AppStorage">
    <histories>
      <item value="This is a * convenience annotation that is equivalent to declaring {@code @Configuration}" />
      <item value="The reflect.AnnotatedElement interface discusses compatibility concerns when evolving an annotation type from being non-repeatable to being repeatable" />
      <item value="Retention" />
      <item value="A variation of ImportSelector that runs after all @Configuration beans have been processed. This type of selector can be particularly useful when the selected imports are @Conditional." />
      <item value="expose their singleton management facility * in a uniform manner" />
      <item value="@Bean methods may not in turn create further configuration classes (any such instances will be treated as regular beans, with their configuration annotations remaining undetected)" />
      <item value="his avoids the need to use an @Import annotation when the relationship between AppConfig and DatabaseConfig is already implicitly clear" />
      <item value="reside in" />
      <item value="therefore may also take advantage of @Autowired/@Inject like any regular @Component. In particular, if a single constructor is present autowiring semantics will be applied transparently for that constructor:" />
      <item value="Via" />
      <item value="Note that the &lt;context:component-scan&gt; element has an annotation-config attribute; however, this annotation does not. This is because in almost all cases when using @ComponentScan, default annotation config processing (e.g. processing @Autowired and friends) is assumed. Furthermore, when using AnnotationConfigApplicationContext, annotation config processors are always registered, meaning that any attempt to disable them at the @ComponentScan level would be ignored. See @Configuration's Javadoc for usage examples." />
      <item value="that the &lt;context:component-scan&gt; element has an annotation-config attribute; however, this annotation does not." />
      <item value="directives" />
      <item value="attach" />
      <item value="Ωattach" />
      <item value="Ω计算" />
      <item value="upacp Extra" />
      <item value="retrieve" />
      <item value="enclosing" />
      <item value="as well as" />
      <item value="Configuration Phase" />
      <item value="stop watch" />
      <item value="watch" />
      <item value="primary Sources" />
      <item value="male" />
      <item value="性别" />
      <item value="Content Negotiation Manager Factory Bean" />
      <item value="Composite" />
      <item value="Locale" />
      <item value="strip Trailing Slash" />
      <item value="strip Leading Slash" />
      <item value="Find an {@code @ExceptionHandler} method for the given exception. The default implementation searches methods in the class hierarchy of the controller first" />
      <item value="Find an @ExceptionHandler method for the given exception. The default implementation searches methods in the class hierarchy of the controller first and if not found, it continues searching for additional @ExceptionHandler methods assuming some @ControllerAdvice Spring-managed beans were detected" />
      <item value="Find an {@code @ExceptionHandler} method for the given exception. The default * implementation searches methods in the class hierarchy of the controller first * and if not found, it continues searching for additional {@code @ExceptionHandler} * methods assuming some {@linkplain ControllerAdvice @ControllerAdvice}" />
      <item value="@param exception the raised exception * @return a method to handle the exception, or {@code null} if none" />
      <item value="none" />
      <item value="managed beans were detected. * @param handlerMethod the method where the exception was raised (may be {@code null}) * @param exception the raised exception * @return a method to handle the exception, or" />
      <item value="determine" />
      <item value="detect" />
      <item value="检测" />
      <item value="detect Exception Mappings" />
      <item value="Resolved Type" />
      <item value="Media Type" />
      <item value="specification" />
      <item value="Content Negotiation Strategy" />
      <item value="concrete" />
      <item value="AUDIT" />
      <item value="redirect Model" />
      <item value="redirect Model Scenario" />
      <item value="URI TEMPLATE VARIABLES ATTRIBUTE" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1042" />
        <entry key="ENGLISH" value="1043" />
        <entry key="DANISH" value="5" />
        <entry key="GERMAN" value="6" />
        <entry key="FRENCH" value="7" />
        <entry key="FINNISH" value="1" />
        <entry key="PORTUGUESE" value="2" />
        <entry key="SWEDISH" value="1" />
        <entry key="SPANISH" value="6" />
        <entry key="HUNGARIAN" value="4" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20191101000350914" />
        <option name="appKeyConfigured" value="true" />
      </app-key>
    </option>
    <option name="ignoreRegExp" value="" />
    <option name="translator" value="fanyi.baidu" />
  </component>
</application>