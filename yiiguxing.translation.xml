<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="474" />
    <option name="newTranslationDialogWidth" value="1510" />
    <option name="newTranslationDialogX" value="410" />
    <option name="newTranslationDialogY" value="669" />
    <histories>
      <item value="preferably a direct buffer which is suitable for IO" />
      <item value="Note that" />
      <item value="Abstract Derived Byte Buf" />
      <item value="dispose" />
      <item value="Weak reference objects, which do not prevent their referents from being made finalizable, finalized, and then reclaimed. Weak references are most often used to implement canonicalizing mappings. &lt;p&gt; Suppose that the garbage collector determines at a certain point in time that an object is &lt;a href=&quot;package-summary.htmlreachability&quot;&gt;weakly reachable&lt;a&gt;. At that time it will atomically clear all weak references to that object and all weak references to any other weakly-reachable objects from which that object is reachable through a chain of strong and soft references. At the same time it will declare all of the formerly weakly-reachable objects to be finalizable. At the same time or at some later time it will enqueue those newly-cleared weak references that are registered with reference queues." />
      <item value="canonicalizing" />
      <item value="Aware&#10;" />
      <item value="ResourceAware" />
      <item value="ApplicationAware&#10;" />
      <item value="Application Aware&#10;" />
      <item value="touch&#10;" />
      <item value="retain&#10;" />
      <item value="Ensures lack of reordering of loads before the fence with loads or stores after the fence." />
      <item value="load Fence" />
      <item value="@deprecated use the Little Endian accessors, e.g. {@code getShortLE}, {@code getIntLE}" />
      <item value="using non-short-circuit &amp; to reduce branching - this is a hot path and targetCapacity should rarely overflow" />
      <item value="get Max Bytes Per Gathering Write" />
      <item value="It is possible that we have set the write OP, woken up by NIO because the socket is writable, and then use our write quantum. In this case we no longer want to set the write OP because the socket is still writable (as far as we know). We will find out next time we attempt to write if the socket is writable and set the write OP if necessary." />
      <item value="quantum" />
      <item value="progressive Size" />
      <item value="that was" />
      <item value="that was flushed" />
      <item value="The Entry that is the first in the linked-list structure that was flushed" />
      <item value="If there's a pending flush operation, event loop will call forceFlush() later, and thus there's no need to call it now." />
      <item value="writability&#10;" />
      <item value="invoke Channel Writability Changed" />
      <item value="estimator" />
      <item value="respect Maybe More Data" />
      <item value="Also check for readOps of 0 to workaround possible JDK bug which may otherwise lead to a spin loop" />
      <item value="Makes best possible effort to detect" />
      <item value="arbitrary" />
      <item value="take care of clear the OP_WRITE once there is nothing left to write" />
      <item value="take care of" />
      <item value="remove OP_CONNECT as otherwise Selector.select(..) will always return without blocking" />
      <item value="In the first case, 'wakenUp' is set to true and the following 'selector.select(...)' will wake up immediately. Until 'wakenUp' is set to false again in the next round, 'wakenUp.compareAndSet(false, true)' will fail, and therefore any attempt to wake up the Selector will fail, too, causing the following 'selector.select(...)' call to block unnecessarily." />
      <item value="wakenUp.compareAndSet(false, true)' is always evaluated before calling 'selector.wakeup()' to reduce the wake-up overhead. (Selector.wakeup() is an expensive operation.)" />
      <item value="is Compatible" />
      <item value="add Task Wakes Up" />
      <item value="Either we tried to add the task from within the EventLoop or we was not able to add it even with backoff" />
      <item value="Try to wake up the executor so it will empty its task queue." />
      <item value="his is only done if the task was added from outside of the event loop which means" />
      <item value="Tries to backoff" />
      <item value="backoff" />
      <item value="handy" />
      <item value="guaranteed" />
      <item value="sensible" />
      <item value="Returns true if and only if all EventExecutors managed by this EventExecutorGroup are being shut down gracefully or was shut down.&#10;" />
      <item value="global fashion" />
      <item value="Besides" />
      <item value="via" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="5101" />
        <entry key="ENGLISH" value="5102" />
        <entry key="CHINESE_CLASSICAL" value="1" />
        <entry key="ALBANIAN" value="1" />
        <entry key="AZERBAIJANI" value="1" />
        <entry key="ICELANDIC" value="1" />
        <entry key="POLISH" value="1" />
        <entry key="DANISH" value="8" />
        <entry key="GERMAN" value="9" />
        <entry key="FRENCH" value="17" />
        <entry key="FINNISH" value="1" />
        <entry key="DUTCH" value="1" />
        <entry key="CATALAN" value="4" />
        <entry key="KURDISH" value="1" />
        <entry key="ROMANIAN" value="7" />
        <entry key="MALAY" value="1" />
        <entry key="PORTUGUESE" value="7" />
        <entry key="SWEDISH" value="3" />
        <entry key="SLOVAK" value="1" />
        <entry key="WELSH" value="1" />
        <entry key="SPANISH" value="13" />
        <entry key="HUNGARIAN" value="5" />
        <entry key="ITALIAN" value="5" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1632390789736" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20191101000350914" />
      </app-key>
    </option>
    <option name="primaryFontFamily" value="JetBrains Mono" />
    <option name="translator" value="BAIDU" />
  </component>
</application>