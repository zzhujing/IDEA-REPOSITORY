<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="369" />
    <option name="newTranslationDialogWidth" value="896" />
    <option name="newTranslationDialogX" value="1795" />
    <option name="newTranslationDialogY" value="740" />
    <histories>
      <item value="he default is true, allowing for 'inter-bean references' via direct method calls within the configuration class as well as for external calls to this configuration's @Bean methods, e.g. from another configuration class. If this is not needed since each of this particular configuration's @Bean methods is self-contained and designed as a plain factory method for container use, switch this flag to false in order to avoid CGLIB subclass processing.&#10;Turning off bean method interception effectively processes @Bean methods individually like when declared on non-@Configuration classes, a.k.a. &quot;@Bean Lite Mode&quot; (see @Bean's javadoc). It is therefore behaviorally equivalent to removing the @Configuration stereotype.&#10; " />
      <item value="he default is true, allowing for 'inter-bean references' via direct method calls within the configuration class as well as for external calls to this configuration's @Bean methods, e.g. from another configuration class. If this is not needed since each of this particular configuration's @Bean methods is self-contained and designed as a plain factory method for container use, switch this flag to false in order to avoid CGLIB subclass processing.&#10;Turning off bean method interception effectively processes @Bean methods individually like when declared on non-@Configuration classes, a.k.a. &quot;@Bean Lite Mode&quot; (see @Bean's javadoc). It is therefore behaviorally equivalent to removing the @Configuration stereotype.&#10;" />
      <item value="from another configuration class. If this is not needed since each of this particular configuration's @Bean methods is self-contained and designed as a plain factory method for container use, switch this flag to false in order to avoid CGLIB subclass processing.&#10;" />
      <item value="the behavior of&#10;" />
      <item value="the be" />
      <item value="This approach may be desirable simply because it is more explicit, or it may be necessary in order to distinguish between two CacheManager beans present in the same container.&#10;" />
      <item value="Ω" />
      <item value="desirable&#10;" />
      <item value="de" />
      <item value="approch&#10;&#10;&#10;&#10;" />
      <item value="approch&#10;&#10;&#10;" />
      <item value="approch&#10;&#10;" />
      <item value="approch&#10;" />
      <item value="management" />
      <item value="approach&#10;" />
      <item value="appro" />
      <item value="stub&#10;" />
      <item value="con" />
      <item value="consider&#10;" />
      <item value="Ωconsider" />
      <item value="establish&#10;" />
      <item value="e" />
      <item value="for those that&#10;" />
      <item value="for t'ho'se" />
      <item value="significant&#10;" />
      <item value="sign" />
      <item value="as there is no reasonable default that the framework can use as a convention&#10;" />
      <item value="reasonable&#10;" />
      <item value="scenarios above&#10;" />
      <item value="scenarios&#10;" />
      <item value="that power&#10;" />
      <item value="responsible&#10;" />
      <item value="intersection" />
      <item value="populate" />
      <item value="equivalent to defining a set of interface member ITDs for the public methods of the interface&#10;" />
      <item value="Declare Parents" />
      <item value="Introduction Info" />
      <item value="is Assignable From" />
      <item value="Participating" />
      <item value="is Global Rollback On Participation Failure" />
      <item value="Do not support a current transaction; rather always execute non-transactionally" />
      <item value="PROPAGATION NOT SUPPORTED" />
      <item value="MANDATORY" />
      <item value="declaratively" />
      <item value="fine-grained" />
      <item value="performed" />
      <item value="Resource management code should check for thread-bound resources, e.g. JDBC Connections or Hibernate Sessions, via {@code getResource}. Such code is normally not supposed to bind resources to threads, as this is the responsibility of transaction managers. A further option is to lazily bind on first use if transaction synchronization is active, for performing transactions that span an arbitrary number of resources." />
      <item value="for performing transactions that span an arbitrary number of resources." />
      <item value="responsibility" />
      <item value="Supports one resource per key without overwriting" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="2731" />
        <entry key="ENGLISH" value="2732" />
        <entry key="ALBANIAN" value="1" />
        <entry key="AZERBAIJANI" value="1" />
        <entry key="ICELANDIC" value="1" />
        <entry key="DANISH" value="7" />
        <entry key="GERMAN" value="8" />
        <entry key="FRENCH" value="14" />
        <entry key="FINNISH" value="1" />
        <entry key="DUTCH" value="1" />
        <entry key="CATALAN" value="2" />
        <entry key="KURDISH" value="1" />
        <entry key="ROMANIAN" value="5" />
        <entry key="PORTUGUESE" value="6" />
        <entry key="SWEDISH" value="2" />
        <entry key="SLOVAK" value="1" />
        <entry key="WELSH" value="1" />
        <entry key="SPANISH" value="13" />
        <entry key="HUNGARIAN" value="5" />
        <entry key="ITALIAN" value="2" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1612682102076" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20191101000350914" />
      </app-key>
    </option>
    <option name="primaryFontFamily" value="JetBrains Mono" />
    <option name="translator" value="BAIDU" />
  </component>
</application>