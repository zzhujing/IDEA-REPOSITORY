<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="369" />
    <option name="newTranslationDialogWidth" value="896" />
    <option name="newTranslationDialogX" value="909" />
    <option name="newTranslationDialogY" value="541" />
    <histories>
      <item value="No context instance was injected at construction time -&gt; see if one has been registered in the servlet context. If one exists, it is assumed that the parent context (if any) has already been set and that the user has performed any initialization such as setting the context id" />
      <item value="determine" />
      <item value="The wac environment's initPropertySources will be called in any case when the context is refreshed; do it eagerly here to ensure servlet property sources are in place for use in any post-processing or initialization that occurs below prior to refresh" />
      <item value="Simply delegates to ContextLoader as well as to ContextCleanupListener.&#10;" />
      <item value="Î©" />
      <item value="ignore Unresolvable Placeholders" />
      <item value="against any underlying source" />
      <item value="against" />
      <item value="properties" />
      <item value="Interface for resolving properties against any underlying source." />
      <item value="the reflective field that is the target of the conversion" />
      <item value="the method parameter that is the target of the conversion" />
      <item value="Extract" />
      <item value="Interpolates" />
      <item value="Inner class to avoid a hard-coded Hibernate Validator dependency." />
      <item value="constrained" />
      <item value="is Cascading" />
      <item value="is Constrained" />
      <item value="Resource Bundle Message Interpolator" />
      <item value="Constraint Violation Exception" />
      <item value="Variant" />
      <item value="ancestors" />
      <item value="externally Managed Config Members" />
      <item value="post Process Merged Bean Definition" />
      <item value="is Synchronized" />
      <item value="conventional" />
      <item value="substitute" />
      <item value="This is effectively a hint and the actual cache provider that you are using may not support it in a synchronized fashion. Check your provider documentation for more details on the actual semantics." />
      <item value="The synchronization leads to a couple of limitations:" />
      <item value="Registrar&#10;" />
      <item value="{@code true} if the object on whose behalf we are asking is the subject on one or more introductions; {@code false} otherwise @return whether or not this method matches statically" />
      <item value="A specialized type of {@link MethodMatcher} that takes into account introductions when matching methods. If there are no introductions on the target class, a method matcher may be able to optimize matching more effectively for example." />
      <item value="used for calls that are unadvised but can return this" />
      <item value="Interface to be implemented by classes that hold the configuration of a factory of AOP proxies" />
      <item value="Advised" />
      <item value="either class or method level." />
      <item value="level" />
      <item value="detected" />
      <item value="Whether the eviction should occur before the method is invoked.&#10;Setting this attribute to true, causes the eviction to occur irrespective of the method outcome (i.e., whether it threw an exception or not).&#10;Defaults to false, meaning that the cache eviction operation will occur after the advised method is invoked successfully (i.e. only if the invocation did not throw an exception).&#10;" />
      <item value="Whether the eviction should occur before the method is invoked.&#10;" />
      <item value="before" />
      <item value="Whether" />
      <item value="invoked" />
      <item value="synchronized" />
      <item value="preserve Target Class" />
      <item value="is Opaque" />
      <item value="Objenesis Cglib Aop Proxy" />
      <item value="independent" />
      <item value="aware&#10;" />
      <item value="awareness&#10;" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="2774" />
        <entry key="ENGLISH" value="2775" />
        <entry key="ALBANIAN" value="1" />
        <entry key="AZERBAIJANI" value="1" />
        <entry key="ICELANDIC" value="1" />
        <entry key="DANISH" value="7" />
        <entry key="GERMAN" value="8" />
        <entry key="FRENCH" value="14" />
        <entry key="FINNISH" value="1" />
        <entry key="DUTCH" value="1" />
        <entry key="CATALAN" value="2" />
        <entry key="KURDISH" value="1" />
        <entry key="ROMANIAN" value="5" />
        <entry key="PORTUGUESE" value="6" />
        <entry key="SWEDISH" value="2" />
        <entry key="SLOVAK" value="1" />
        <entry key="WELSH" value="1" />
        <entry key="SPANISH" value="13" />
        <entry key="HUNGARIAN" value="5" />
        <entry key="ITALIAN" value="2" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1613305116795" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20191101000350914" />
      </app-key>
    </option>
    <option name="primaryFontFamily" value="JetBrains Mono" />
    <option name="translator" value="BAIDU" />
  </component>
</application>